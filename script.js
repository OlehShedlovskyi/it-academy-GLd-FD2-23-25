//–ø–µ—Ä–µ–ø–µ–Ω–Ω–∞—è - –ø—Ä–∏–º–µ—Ä—ã

// // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
// alert('–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üöÄ');
//
// // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// document.querySelector('h1').textContent = 'JS —ç—Ç–æ –∫—Ä—É—Ç–æ!';
//
// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ
// document.querySelector('button').addEventListener('click', () => {
//     console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!');
// });

// // –ß–∏—Å–ª–æ
// let score = 0;
// score = score + 10; // –£–≤–µ–ª–∏—á–∏–ª–∏ —Å—á–µ—Ç –Ω–∞ 10
//
// // –°—Ç—Ä–æ–∫–∞ (—Ç–µ–∫—Å—Ç)
// const userName = "–ò–≥–æ—Ä—å";
// console.log("–ü—Ä–∏–≤–µ—Ç, " + userName); // "–ü—Ä–∏–≤–µ—Ç, –ò–≥–æ—Ä—å"
//
// // –ë—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ (true/false)
// let isOnline = true;
// isOnline = false; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–µ—Ç–∏


// let message = "–Ø –∏–∑—É—á–∞—é JS!";
// console.log(message); // –í—ã–≤–µ–¥–µ—Ç —Ç–µ–∫—Å—Ç
//
// const hoursInDay = 24;
// console.log("–í —Å—É—Ç–∫–∞—Ö " + hoursInDay + " —á–∞—Å–∞");
//
// // –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
// let counter = 0;
// counter = counter + 1;
// console.log(counter); // 1

//swift - –ø—Ä–∏–≤–µ—Ä—ã

// let buttonNumber = 100; // –î–æ–ø—É—Å—Ç–∏–º, –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 2
//
// switch (buttonNumber) {
//     case 1:
//         console.log("–í—ã–¥–∞—é –≤–æ–¥—É üíß");
//         break; // –û—Å—Ç–∞–Ω–æ–≤–∏—Å—å –∑–¥–µ—Å—å, –¥–∞–ª—å—à–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–π!
//     case 2:
//         console.log("–í—ã–¥–∞—é —Å–æ–∫ üßÉ");
//         break;
//     case 3:
//         console.log("–í—ã–¥–∞—é —á–∞–π ‚òï");
//         break;
//     default:
//         console.log("–¢–∞–∫–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞ –Ω–µ—Ç üò¢");
// }
// // –í—ã–≤–µ–¥–µ—Ç—Å—è: "–í—ã–¥–∞—é —Å–æ–∫ üßÉ"

// let –¥–µ–Ω—å = "–ø—è—Ç–Ω–∏—Ü–∞"; // –ú–µ–Ω—è–π —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
//
// switch (–¥–µ–Ω—å) {
//     case "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
//         console.log("–°–µ–≥–æ–¥–Ω—è –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫. –í—Ä–µ–º—è –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—É—é –Ω–µ–¥–µ–ª—é! üí™");
//         break;
//     case "–≤—Ç–æ—Ä–Ω–∏–∫":
//         console.log("–°–µ–≥–æ–¥–Ω—è –≤—Ç–æ—Ä–Ω–∏–∫. –†–∞–±–æ—Ç–∞–µ–º –¥–∞–ª—å—à–µ! üõ†Ô∏è");
//         break;
//     case "—Å—Ä–µ–¥–∞":
//         console.log("–°–µ–≥–æ–¥–Ω—è —Å—Ä–µ–¥–∞. –ú–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞ ‚Äî –Ω–µ–¥–µ–ª—è –Ω–∞ —Å–µ—Ä–µ–¥–∏–Ω–µ! üéâ");
//         break;
//     case "—á–µ—Ç–≤–µ—Ä–≥":
//         console.log("–°–µ–≥–æ–¥–Ω—è —á–µ—Ç–≤–µ—Ä–≥. –°–∫–æ—Ä–æ –≤—ã—Ö–æ–¥–Ω—ã–µ! ü•≥");
//         break;
//     case "–ø—è—Ç–Ω–∏—Ü–∞":
//         console.log("–°–µ–≥–æ–¥–Ω—è –ø—è—Ç–Ω–∏—Ü–∞! –£—Ä–∞, –≤–µ—á–µ—Ä–æ–º –æ—Ç–¥—ã—Ö–∞–µ–º! üçï");
//         break;
//     case "—Å—É–±–±–æ—Ç–∞":
//         console.log("–°–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞. –í—Ä–µ–º—è –¥–ª—è —Å–µ–±—è! üéÆ");
//         break;
//     case "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
//         console.log("–°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ. –ó–∞–≤—Ç—Ä–∞ —Å–Ω–æ–≤–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫... üò¥");
//         break;
//     default:
//         console.log("–¢–∞–∫–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! üïµÔ∏è");
// }


// –æ–±—ä–µ–∫—Ç—ã –ø—Ä–∏–º–µ—Ä—ã

// let –∫–æ—Ç = {
//     –∏–º—è: "–ë–∞—Ä—Å–∏–∫",
//     –≤–æ–∑—Ä–∞—Å—Ç: 3,
//     —Ü–≤–µ—Ç: "—Ä—ã–∂–∏–π",
//     –ª—é–±–∏–º–∞—è–ï–¥–∞: "—Ä—ã–±–∞"
// };
//
// console.log(–∫–æ—Ç.–∏–º—è); // –í—ã–≤–µ–¥–µ—Ç: –ë–∞—Ä—Å–∏–∫
// console.log(–∫–æ—Ç.–≤–æ–∑—Ä–∞—Å—Ç); // –í—ã–≤–µ–¥–µ—Ç: 3
//
// –∫–æ—Ç.–≤–æ–∑—Ä–∞—Å—Ç = 4;
// console.log(–∫–æ—Ç.–≤–æ–∑—Ä–∞—Å—Ç); // –í—ã–≤–µ–¥–µ—Ç: 4
//
// –∫–æ—Ç.–ª—é–±–∏–º–∞—è–ò–≥—Ä—É—à–∫–∞ = "–º—è—á–∏–∫";
// console.log(–∫–æ—Ç.–ª—é–±–∏–º–∞—è–ò–≥—Ä—É—à–∫–∞); // –í—ã–≤–µ–¥–µ—Ç: –º—è—á–∏–∫

//—Ä–µ–∫—É—Ä—Å–∏—è

// function –æ–±—Ä–∞—Ç–Ω—ã–π–û—Ç—Å—á—ë—Ç(n) {
//     if (n === 0) { // –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π: –∫–æ–≥–¥–∞ –¥–æ—Å—á–∏—Ç–∞–ª–∏ –¥–æ 0
//         console.log("–ü—É—Å–∫!");
//     } else { // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —à–∞–≥
//         console.log(n); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ
//         –æ–±—Ä–∞—Ç–Ω—ã–π–û—Ç—Å—á—ë—Ç(n - 1); // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –¥–ª—è n-1
//     }
// }
//
// –æ–±—Ä–∞—Ç–Ω—ã–π–û—Ç—Å—á—ë—Ç(5); // –ù–∞—á–Ω—ë–º —Å 5
// // –í—ã–≤–µ–¥–µ—Ç: 5, 4, 3, 2, 1, –ü—É—Å–∫!

// function –æ—Ç–∫—Ä—ã—Ç—å–ú–∞—Ç—Ä–µ—à–∫—É(n) {
//     if (n === 1) { // –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π: —Å–∞–º–∞—è –º–∞–ª–µ–Ω—å–∫–∞—è –º–∞—Ç—Ä—ë—à–∫–∞
//         console.log("–î–æ—Å—Ç–∞–ª –º–∞–ª–µ–Ω—å–∫—É—é –º–∞—Ç—Ä—ë—à–∫—É!");
//     } else {
//         console.log(`–û—Ç–∫—Ä—ã–ª –º–∞—Ç—Ä—ë—à–∫—É —É—Ä–æ–≤–Ω—è ${n}`);
//         –æ—Ç–∫—Ä—ã—Ç—å–ú–∞—Ç—Ä–µ—à–∫—É(n - 1); // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é
//     }
// }
//
// –æ—Ç–∫—Ä—ã—Ç—å–ú–∞—Ç—Ä–µ—à–∫—É(3);
// –í—ã–≤–µ–¥–µ—Ç:
// –û—Ç–∫—Ä—ã–ª –º–∞—Ç—Ä—ë—à–∫—É —É—Ä–æ–≤–Ω—è 3
// –û—Ç–∫—Ä—ã–ª –º–∞—Ç—Ä—ë—à–∫—É —É—Ä–æ–≤–Ω—è 2
// –î–æ—Å—Ç–∞–ª –º–∞–ª–µ–Ω—å–∫—É—é –º–∞—Ç—Ä—ë—à–∫—É!

// function —Å—É–º–º–∞(n) {
//     if (n === 1) { // –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π: –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ ‚Äî 1
//         return 1;
//     } else { // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —à–∞–≥
//         return n + —Å—É–º–º–∞(n - 1); // n + —Å—É–º–º–∞ –≤—Å–µ—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö
//     }
// }
//
// console.log(—Å—É–º–º–∞(5)); // 15 (5 + 4 + 3 + 2 + 1)

//Rest –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

// function shareCandies(firstFriend, secondFriend, ...restCandies) {
//     console.log(`–ü–µ—Ä–≤—ã–π –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç: ${firstFriend}`);
//     console.log(`–í—Ç–æ—Ä–æ–π –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç: ${secondFriend}`);
//     console.log(`–ê —ç—Ç–æ –º–æ–∏ –∫–æ–Ω—Ñ–µ—Ç—ã: ${restCandies}`);
// }
//
// shareCandies("üç´", "üç≠", "üç©", "üç™", "üç¨");
// // –í—ã–≤–µ–¥–µ—Ç:
// // "–ü–µ—Ä–≤—ã–π –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç: üç´"
// // "–í—Ç–æ—Ä–æ–π –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç: üç≠"
// // "–ê —ç—Ç–æ –º–æ–∏ –∫–æ–Ω—Ñ–µ—Ç—ã: üç©,üç™,üç¨"

//–û–ø–µ—Ä–∞—Ç–æ—Ä Spread

// const box1 = ["üß∏", "üöó"];
// const box2 = ["üéÆ", "üìö"];
//
// const bigBox = [...box1, ...box2]; // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –æ–±–µ –∫–æ—Ä–æ–±–∫–∏
// console.log(bigBox); // ["üß∏", "üöó", "üéÆ", "üìö"]

// const oldToys = ["‚öΩ", "üé≤"];
// const newToys = [...oldToys, "üé®"]; // –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
// console.log(newToys); // ["‚öΩ", "üé≤", "üé®"]

//–ì–¥–µ –µ—â—ë –∏—Å–ø–æ–ª—å–∑—É—é—Ç Spread?

// const cat = { name: "–ë–∞—Ä—Å–∏–∫", age: 2 };
// const catClone = { ...cat, color: "—Ä—ã–∂–∏–π" }; // –ö–æ–ø–∏—Ä—É–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ
// console.log(catClone); // { name: "–ë–∞—Ä—Å–∏–∫", age: 2, color: "—Ä—ã–∂–∏–π" }
//
// function giveCandies(a, b, c) {
//     console.log(`–î–µ—Ç–∏ –ø–æ–ª—É—á–∞—é—Ç: ${a}, ${b}, ${c}`);
// }
//
// const candies = ["üç≠", "üç™", "üç©"];
// giveCandies(...candies); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤: giveCandies("üç≠", "üç™", "üç©")
// // –í—ã–≤–µ–¥–µ—Ç: "–î–µ—Ç–∏ –ø–æ–ª—É—á–∞—é—Ç: üç≠, üç™, üç©"

//–¶–∏–∫–ª while ‚Äî ¬´–ü–æ–∫–∞ —á—Ç–æ-—Ç–æ –≤–µ—Ä–Ω–æ, –¥–µ–ª–∞–π —ç—Ç–æ¬ª

// let steps = 1; // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
//
// while (steps <= 5) { // –ü–æ–∫–∞ —à–∞–≥–æ–≤ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5
//     console.log(`–®–∞–≥ –Ω–æ–º–µ—Ä ${steps}`);
//     steps = steps + 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∞–≥ –Ω–∞ 1
// }

// –í—ã–≤–µ–¥–µ—Ç:
// "–®–∞–≥ –Ω–æ–º–µ—Ä 1"
// "–®–∞–≥ –Ω–æ–º–µ—Ä 2"
// ... –∏ —Ç–∞–∫ –¥–æ "–®–∞–≥ –Ω–æ–º–µ—Ä 5"

//–¶–∏–∫–ª for ‚Äî ¬´–î–µ–ª–∞–π —ç—Ç–æ —Ä–æ–≤–Ω–æ N —Ä–∞–∑¬ª

// for (–Ω–∞—á–∞–ª–æ; —É—Å–ª–æ–≤–∏–µ; —à–∞–≥)
// for (let plate = 1; plate <= 5; plate++) {
//     console.log(`–ü–æ–º—ã–ª —Ç–∞—Ä–µ–ª–∫—É –Ω–æ–º–µ—Ä ${plate}`);
// }

// –í—ã–≤–µ–¥–µ—Ç:
// "–ü–æ–º—ã–ª —Ç–∞—Ä–µ–ª–∫—É –Ω–æ–º–µ—Ä 1"
// "–ü–æ–º—ã–ª —Ç–∞—Ä–µ–ª–∫—É –Ω–æ–º–µ—Ä 2"
// ... –∏ —Ç–∞–∫ –¥–æ 5

//–æ–±—ä–µ–∫—Ç—ã –≤ JavaScript,

// let car = {
//     color: "–∫—Ä–∞—Å–Ω–∞—è üöó", // –°–≤–æ–π—Å—Ç–≤–æ color (—Ü–≤–µ—Ç)
//     wheels: 4,           // –°–≤–æ–π—Å—Ç–≤–æ wheels (–∫–æ–ª–µ—Å–∞)
//     speed: "–±—ã—Å—Ç—Ä–∞—è"     // –°–≤–æ–π—Å—Ç–≤–æ speed (—Å–∫–æ—Ä–æ—Å—Ç—å)
// };
//
// console.log(car.color);   // "–∫—Ä–∞—Å–Ω–∞—è üöó" (—á–µ—Ä–µ–∑ —Ç–æ—á–∫—É)
// console.log(car["speed"]); // "–±—ã—Å—Ç—Ä–∞—è"    (—á–µ—Ä–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏)
//
// car.color = "—Å–∏–Ω—è—è üîµ"; // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç
// console.log(car.color); // "—Å–∏–Ω—è—è üîµ"
//
// car.horn = "–±–∏–ø-–±–∏–ø! üì¢"; // –î–æ–±–∞–≤–∏–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ horn
// console.log(car.horn);    // "–±–∏–ø-–±–∏–ø! üì¢"
//
// car.beep = function() {
//     console.log("–ë–ò–ò–ò–ü! üö®");
// };
//
// car.beep(); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞: –≤—ã–≤–µ–¥–µ—Ç "–ë–ò–ò–ò–ü! üö®"

// let dog = {
//     name: "–®–∞—Ä–∏–∫",
//     age: 3,
//     bark: function() {
//         console.log("–ì–∞–≤-–≥–∞–≤! üêæ");
//     }
// };
//
// console.log(dog.name); // "–®–∞—Ä–∏–∫"
// dog.bark();            // "–ì–∞–≤-–≥–∞–≤! üêæ"

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî —ç—Ç–æ ¬´—Ñ–æ—Ä–º–æ—á–∫–∞¬ª –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤

// –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–æ—á–∫—É (–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä)
// function ToyCar(color, speed) {
//     // –°–≤–æ–π—Å—Ç–≤–∞ –±—É–¥—É—â–µ–π –º–∞—à–∏–Ω–∫–∏
//     this.color = color;
//     this.speed = speed;
//
//     // –ú–µ—Ç–æ–¥ (—á—Ç–æ —É–º–µ–µ—Ç –º–∞—à–∏–Ω–∫–∞)
//     this.beep = function() {
//         console.log("–ë–∏–ø-–±–∏–ø! üöó");
//     };
// }
// //–û–ø–µ—Ä–∞—Ç–æ—Ä new ‚Äî —Å–æ–∑–¥–∞–µ–º –ø–µ—á–µ–Ω—å–∫–∏ (–æ–±—ä–µ–∫—Ç—ã)
//
// let car1 = new ToyCar("–∫—Ä–∞—Å–Ω–∞—è", "–±—ã—Å—Ç—Ä–∞—è");
// let car2 = new ToyCar("—Å–∏–Ω—è—è", "–º–µ–¥–ª–µ–Ω–Ω–∞—è");
//
// console.log(car1.color); // "–∫—Ä–∞—Å–Ω–∞—è"
// car2.beep();             // "–ë–∏–ø-–±–∏–ø! üöó"

// function Dog(name, age) {
//     this.name = name;
//     this.age = age;
//
//     this.bark = function() {
//         console.log("–ì–∞–≤-–≥–∞–≤! üêæ");
//     };
// }
//
// let myDog = new Dog("–®–∞—Ä–∏–∫", 3);
// console.log(myDog.name); // "–®–∞—Ä–∏–∫"
// myDog.bark();            // "–ì–∞–≤-–≥–∞–≤! üêæ"

// function Airplane(model, wings) {
//     this.model = model;
//     this.wings = wings;
//
//     this.fly = function() {
//         console.log("–°–∞–º–æ–ª–µ—Ç –≤–∑–ª–µ—Ç–µ–ª! ‚úàÔ∏è");
//     };
// }
//
// let plane1 = new Airplane("Boeing", 2);
// let plane2 = new Airplane("Airbus", 2);
//
// plane1.fly(); // "–°–∞–º–æ–ª–µ—Ç –≤–∑–ª–µ—Ç–µ–ª! ‚úàÔ∏è"
// console.log(plane2.model); // "Airbus"

//call –∏ apply ‚Äî ¬´–û–¥–æ–ª–∂–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –¥—Ä—É–≥–æ–π –∏–≥—Ä—É—à–∫–∏¬ª

// –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: –ø–æ–∫—Ä–∞—Å–∏—Ç—å –∏–≥—Ä—É—à–∫—É –≤ —Å–∏–Ω–∏–π —Ü–≤–µ—Ç
// function paint(color) {
//     this.color = color; // this ‚Äî —ç—Ç–æ –∏–≥—Ä—É—à–∫–∞, –∫–æ—Ç–æ—Ä—É—é –∫—Ä–∞—Å–∏–º
// }
//
// let car = { color: "–∫—Ä–∞—Å–Ω–∞—è" };
// let plane = { color: "–±–µ–ª—ã–π" };
//
// // –ò—Å–ø–æ–ª—å–∑—É–µ–º paint –¥–ª—è car —á–µ—Ä–µ–∑ call
// paint.call(car, "—Å–∏–Ω—è—è");
// console.log(car.color); // "—Å–∏–Ω—è—è"
//
// // –ò—Å–ø–æ–ª—å–∑—É–µ–º paint –¥–ª—è plane —á–µ—Ä–µ–∑ apply (–∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º)
// paint.apply(plane, ["–∑–µ–ª–µ–Ω—ã–π"]);
// console.log(plane.color); // "–∑–µ–ª–µ–Ω—ã–π"

//–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã ‚Äî ¬´–ù–∞–∫–ª–µ–π–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏¬ª

// –ò—Å—Ö–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Ä–æ–±–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç "–ü—Ä–∏–≤–µ—Ç"
// function robotGreet() {
//     console.log("–ü—Ä–∏–≤–µ—Ç!");
// }
//
// // –î–µ–∫–æ—Ä–∞—Ç–æ—Ä: —Å—á–∏—Ç–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—ã–∑–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é
// function countCalls(func) {
//     let count = 0;
//
//     // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é-–æ–±–µ—Ä—Ç–∫—É
//     return function() {
//         count++;
//         console.log(`–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ ${count} —Ä–∞–∑`);
//         return func(); // –í—ã–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
//     };
// }
//
// // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞
// const decoratedRobot = countCalls(robotGreet);
//
// decoratedRobot(); // "–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ 1 —Ä–∞–∑", –∑–∞—Ç–µ–º "–ü—Ä–∏–≤–µ—Ç!"
// decoratedRobot(); // "–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ 2 —Ä–∞–∑", –∑–∞—Ç–µ–º "–ü—Ä–∏–≤–µ—Ç!"

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
// function checkPassword(func, password) {
//     return function() {
//         const userInput = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:");
//         if (userInput === password) {
//             func(); // –í—ã–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π
//         } else {
//             console.log("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!");
//         }
//     };
// }
//
// // –£–ª—É—á—à–∞–µ–º —Ä–æ–±–æ—Ç–∞
// const secureRobot = checkPassword(robotGreet, "123");
//
// secureRobot(); // –°–Ω–∞—á–∞–ª–∞ —Å–ø—Ä–æ—Å–∏—Ç –ø–∞—Ä–æ–ª—å. –ï—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ "123", —Å–∫–∞–∂–µ—Ç "–ü—Ä–∏–≤–µ—Ç!"

//–ü—Ä–æ—Ç–æ—Ç–∏–ø –∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ

// –ü—Ä–æ—Ç–æ—Ç–∏–ø (–±–∞–∑–æ–≤–∞—è –∏–≥—Ä—É—à–∫–∞)
// const spiderRobot = {
//     walk: function() { console.log("–ò–¥—É –∫–∞–∫ –ø–∞—É–∫! üï∑Ô∏è") },
//     glow: function() { console.log("–ì–ª–∞–∑–∞ —Å–≤–µ—Ç—è—Ç—Å—è! ‚ú®") }
// };
//
// // –ù–æ–≤–∞—è –∏–≥—Ä—É—à–∫–∞ –Ω–∞—Å–ª–µ–¥—É–µ—Ç –ø—Ä–æ—Ç–æ—Ç–∏–ø
// const superSpider = Object.create(spiderRobot);
// superSpider.shootWeb = function() { console.log("–ü–∏—É-—É-—É! üï∏Ô∏è") };
//
// // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —É–º–µ–µ—Ç —Å—É–ø–µ—Ä-—Ä–æ–±–æ—Ç:
// superSpider.walk(); // "–ò–¥—É –∫–∞–∫ –ø–∞—É–∫! üï∑Ô∏è" (—É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–æ)
// superSpider.shootWeb(); // "–ü–∏—É-—É-—É! üï∏Ô∏è" (—Å–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ)

//–¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤

// –ü—Ä–æ—Ç–æ—Ç–∏–ø 1: –ñ–∏–≤–æ—Ç–Ω–æ–µ
// const animal = { eat: true };
//
// // –ü—Ä–æ—Ç–æ—Ç–∏–ø 2: –ö–æ—Ç (–Ω–∞—Å–ª–µ–¥—É–µ—Ç –∂–∏–≤–æ—Ç–Ω–æ–µ)
// const cat = Object.create(animal);
// cat.meow = function() { console.log("–ú—è—É! üò∫") };
//
// // –ö–æ—Ç–µ–Ω–æ–∫ (–Ω–∞—Å–ª–µ–¥—É–µ—Ç –∫–æ—Ç–∞)
// const kitten = Object.create(cat);
// kitten.play = function() { console.log("–õ–æ–≤–ª—é –º—ã—à–∫—É! üê≠") };
//
// // –ß—Ç–æ —É–º–µ–µ—Ç –∫–æ—Ç–µ–Ω–æ–∫?
// kitten.play(); // "–õ–æ–≤–ª—é –º—ã—à–∫—É! üê≠" (—Å–≤–æ–µ)
// kitten.meow(); // "–ú—è—É! üò∫" (–æ—Ç –∫–æ—Ç–∞)
// console.log(kitten.eat); // true (–æ—Ç –∂–∏–≤–æ—Ç–Ω–æ–≥–æ)

//–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∏ prototype

// –§–æ—Ä–º–æ—á–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±–∞–∫
function Dog(name) {
    this.name = name;
}

// –í—Å–µ —Å–æ–±–∞–∫–∏ —É–º–µ—é—Ç –ª–∞—è—Ç—å (—á–µ—Ä–µ–∑ prototype)
Dog.prototype.bark = function() {
    console.log(`${this.name} –≥–æ–≤–æ—Ä–∏—Ç: –ì–∞–≤-–≥–∞–≤! üê∂`);
};

// –°–æ–∑–¥–∞–µ–º —Å–æ–±–∞–∫—É
const myDog = new Dog("–ë–æ–±–∏–∫");
myDog.bark(); // "–ë–æ–±–∏–∫ –≥–æ–≤–æ—Ä–∏—Ç: –ì–∞–≤-–≥–∞–≤! üê∂"